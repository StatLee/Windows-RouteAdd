#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 5786fa55-9811-4d41-b0c8-697a1a4854bc
# Source File: E:\同步盘\QCloud相关产品开发\Windows路由指定\RouteAddSource.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2015 v4.2.81
     Generated on:       2020/3/2 20:45
     Generated by:       statli
     Organization:       Tencent-
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2015
#>
#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Call-RouteAddSource_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formWin路由绑定ByTencentClou = New-Object 'System.Windows.Forms.Form'
	$text1 = New-Object 'System.Windows.Forms.TextBox'
	$button一键回滚 = New-Object 'System.Windows.Forms.Button'
	$button一键执行 = New-Object 'System.Windows.Forms.Button'
	$process = New-Object 'System.Windows.Forms.Label'
	$interfacename = New-Object 'System.Windows.Forms.Label'
	$iflist = New-Object 'System.Windows.Forms.ListBox'
	$textbox1 = New-Object 'System.Windows.Forms.TextBox'
	$domainname = New-Object 'System.Windows.Forms.Label'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formWin路由绑定ByTencentClou_Load={
		#TODO: Initialize Form Controls here
		$Interfacelists = Get-WMIObject Win32_networkadapter | Select-Object NetConnectionID
		$ifres1 = $Interfacelists -replace "Name", ""
		$ifres2 = $ifres1 -replace "@{=", ""
		$ifres3 = $ifres2 -replace "}", ""
		$ifres4 = $ifres3 -replace "@{netconnectionID=", ""
		$ifres = $ifres4 -replace "", ""
		foreach ($item in $ifres)
		{
			if ($item)
			{
				$selectif = $item
				$FilterText1 = "NetConnectionID Like" + " " + '"' + $selectif + '"'
				$selectifnum1 = Get-WMIObject Win32_networkadapter -Filter $FilterText1 | select-object InterfaceIndex
				$tmpDeviceID1 = $selectifnum1 -split "InterfaceIndex="
				$tmpDeviceID3 = $tmpDeviceID1[1] -replace '\D+(\d+)\D+', '$1'
				[int]$DeviceIDRs1 = $tmpDeviceID3 -replace "}", ""
				$GWDDRSnum1 = Get-WMIObject Win32_networkadapter -Filter $FilterText1 | select-object DeviceID
				$tmpGWDDRSnum1 = $GWDDRSnum1 -split "DeviceID="
				$tmpGWDDRSnum2 = $tmpGWDDRSnum1[1] -replace '\D+(\d+)\D+', '$1'
				[int]$GWDDRSnumRs1 = $tmpGWDDRSnum2 -replace "}", ""
				$gw1 = "Index=$GWDDRSnumRs1"
				$gete1 = Get-WmiObject win32_networkadapterconfiguration -filter "$gw1" | foreach-object {
					$_ | select-object `
					@{ Name = "ComputerName"; Expression = { $_.__SERVER } },
					@{ Name = "MACAddress"; Expression = { $_.MACAddress } },
					@{ Name = "IPAddress"; Expression = { $_.IPAddress[0] } },
					@{ Name = "DefaultIPGateway"; Expression = { $_.DefaultIPGateway[0] } }
				}
				$gete1 = $gete1 -split "DefaultIPGateway="
				$geters1 = $gete1[1] -replace "}", ""
				if ($geters1)
				{
					$iflist.Items.Add($item)
				}
				else { }
				
			}
		}
		if (Test-Path C:\Windows\temp\route_add.log)
		{
			$button一键回滚.Enabled = $true
		}
	}
	
	#region Control Helper Functions
	function Load-ListBox 
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ListBox or CheckedListBox.
	
		.DESCRIPTION
			Use this function to dynamically load items into the ListBox control.
	
		.PARAMETER  ListBox
			The ListBox control you want to add items to.
	
		.PARAMETER  Items
			The object or objects you wish to load into the ListBox's Items collection.
	
		.PARAMETER  DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER  Append
			Adds the item(s) to the ListBox without clearing the Items collection.
		
		.EXAMPLE
			Load-ListBox $ListBox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Load-ListBox $listBox1 "Red" -Append
			Load-ListBox $listBox1 "White" -Append
			Load-ListBox $listBox1 "Blue" -Append
		
		.EXAMPLE
			Load-ListBox $listBox1 (Get-Process) "ProcessName"
	#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.ListBox]$ListBox,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Items,
		    [Parameter(Mandatory=$false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if(-not $Append)
		{
			$listBox.Items.Clear()	
		}
		
		if($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
		{
			$listBox.Items.AddRange($Items)
		}
		elseif ($Items -is [Array])
		{
			$listBox.BeginUpdate()
			foreach($obj in $Items)
			{
				$listBox.Items.Add($obj)
			}
			$listBox.EndUpdate()
		}
		else
		{
			$listBox.Items.Add($Items)	
		}
	
		$listBox.DisplayMember = $DisplayMember	
	}
	#endregion
	
	$button一键执行_Click={
		#TODO: Place custom script here
		$focuescheck = $iflist.SelectedIndex
		write-host $focuescheck
		if ($textbox1.TextLength -eq 0)
		{
			$text1.Text = "当前域名、IP框为空，请补充，谢谢！"	
		}
		else
		{
			if ($focuescheck -lt 0)
			{ $text1.Text = "请确认您有选择到对应的网络设备，谢谢！" }
			else
			{ 
			$selectif = $iflist.SelectedItem
			$text1.Text = "成功获取设备名称，设备名称为" + $selectif
			$FilterText = "NetConnectionID Like" + " " + '"' + $selectif + '"'
			$selectifnum = Get-WMIObject Win32_networkadapter -Filter $FilterText | select-object InterfaceIndex
			$tmpDeviceID = $selectifnum -split "InterfaceIndex="
			$tmpDeviceID2 = $tmpDeviceID[1] -replace '\D+(\d+)\D+', '$1'
			[int]$DeviceIDRs = $tmpDeviceID2 -replace "}", ""
			write-host $DeviceIDRs
			$text1.Text = $text1.Text + "
成功获取设备ID，设备ID为" + $DeviceIDRs
			$GWDDRSnum = Get-WMIObject Win32_networkadapter -Filter $FilterText | select-object DeviceID
			$tmpGWDDRSnum = $GWDDRSnum -split "DeviceID="
			$tmpGWDDRSnum2 = $tmpGWDDRSnum[1] -replace '\D+(\d+)\D+', '$1'
			[int]$GWDDRSnumRs = $tmpGWDDRSnum2 -replace "}", ""
			write-host $GWDDRSnumRs
			$gw = "Index=$GWDDRSnumRs"
			$gete = Get-WmiObject win32_networkadapterconfiguration -filter "$gw" | foreach-object {
				$_ | select-object `
				@{ Name = "ComputerName"; Expression = { $_.__SERVER } },
				@{ Name = "MACAddress"; Expression = { $_.MACAddress } },
				@{ Name = "IPAddress"; Expression = { $_.IPAddress[0] } },
				@{ Name = "DefaultIPGateway"; Expression = { $_.DefaultIPGateway[0] } }
			}
			$gete = $gete -split "DefaultIPGateway="
			$geters = $gete[1] -replace "}", ""
			$text1.Text = $text1.Text + "
成功获取设备网关，设备网关为" + $geters
			$mask = "255.255.255.255"
			$sourcedomain = $textbox1.Text
			if ($textbox1.Text -like "*.*.*.*")
			{
				$sourceip = $textbox1.Text
			}
			else
			{
				$status = @{ "ServerName" = $sourcedomain; "TimeStamp" = (Get-Date -f s) }
				$result = Test-Connection $sourcedomain -Count 1 -ErrorAction SilentlyContinue
				if ($result)
				{
					$status.Results = "Up"
					$status.IP = ($result.IPV4Address).IPAddressToString
				}
				else
				{
					$status.Results = "Down"
					$status.IP = "N/A"
				}
				$sourceip = $status.IP
				$sourceipstatus= $status.IP
			}
			$text1.Text = $text1.Text + "
解析域名中，解析结果为（结果为 N/A 则未解析失败）" + $sourceip
			$routecomm = "route add $sourceip mask $mask $geters if $DeviceIDRs"
				if ($geters)
				{
					$text1.Text = $text1.Text + "
即将执行的路由添加命令为 " + $routecomm
					cmd /c "$routecomm"
					if ($? -eq $true)
					{
						if (Test-Path C:\Windows\temp\route_add.log)
						{ }
						else
						{ New-Item -Path C:\Windows\temp\route_add.log -type file }
						$routecomm | out-file C:\Windows\temp\route_add.log
						$button一键回滚.Enabled = $true
						$text1.Text = $text1.Text + "
执行完成"
					}
					else
					{
						cmd /c "route delete $sourceip"
						if ($? -eq $true)
						{
							
							if (Test-Path C:\Windows\temp\route_add.log)
							{ }
							else
							{ New-Item -Path C:\Windows\temp\route_add.log -type file }
							$routecomm | out-file C:\Windows\temp\route_add.log
							$button一键回滚.Enabled = $true
							$text1.Text = $text1.Text + "
执行完成"
						}
						else
						{
							if ($sourceipstatus = "N/A")
							{
								$text1.Text = $text1.Text + "
执行失败"
								$text1.Text = $text1.Text + "
$sourcedomain 解析失败，请先检查DNS或手动录入IP"
							}
							else
							{
								$text1.Text = $text1.Text + "
执行失败"
								$text1.Text = $text1.Text + "
存在异常情况或接口未处于活跃状态"
							}
						}
					}
				}
				else
				{
					$text1.Text = $text1.Text + "
当前网卡无配置网关,请先检查"
				}
				
			}
		}
		
	}
	
	
	$button一键回滚_Click={
		#TODO: Place custom script here
		$rollbackcomtmp = Get-Content C:\Windows\temp\route_add.log
		$rollbackcom= $rollbackcomtmp -replace "add", "delete"
		cmd /c $rollbackcom
		if ($? -eq $true)
		{
			if (Test-Path C:\Windows\temp\route_add.log)
			{
				$text1.Text = "回滚成功，命令为： " + $rollbackcom
				Remove-Item -Path C:\Windows\temp\route_add.log
				$button一键回滚.Enabled = $false
			}
			else
			{
				$rollbackcom1 = $routecomm -replace "add", "delete"
				$text1.Text = "回滚失败，回滚文件不存在，请手动在cmd中输入
"+ $rollbackcom1 }
			
		}
		else
		{ $text1.Text = "回滚失败，命令为： " + $rollbackcom }
	}
	
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formWin路由绑定ByTencentClou.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$button一键回滚.remove_Click($button一键回滚_Click)
			$button一键执行.remove_Click($button一键执行_Click)
			$formWin路由绑定ByTencentClou.remove_Load($formWin路由绑定ByTencentClou_Load)
			$formWin路由绑定ByTencentClou.remove_Load($Form_StateCorrection_Load)
			$formWin路由绑定ByTencentClou.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formWin路由绑定ByTencentClou.SuspendLayout()
	#
	# formWin路由绑定ByTencentClou
	#
	$formWin路由绑定ByTencentClou.Controls.Add($text1)
	$formWin路由绑定ByTencentClou.Controls.Add($button一键回滚)
	$formWin路由绑定ByTencentClou.Controls.Add($button一键执行)
	$formWin路由绑定ByTencentClou.Controls.Add($process)
	$formWin路由绑定ByTencentClou.Controls.Add($interfacename)
	$formWin路由绑定ByTencentClou.Controls.Add($iflist)
	$formWin路由绑定ByTencentClou.Controls.Add($textbox1)
	$formWin路由绑定ByTencentClou.Controls.Add($domainname)
	$formWin路由绑定ByTencentClou.BackgroundImageLayout = 'None'
	$formWin路由绑定ByTencentClou.ClientSize = '634, 302'
	#region Binary Data
	$formWin路由绑定ByTencentClou.Icon = [System.Convert]::FromBase64String('
AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANGuDBbYwBtc18Ees+S2Gtn2phX1/aMU//6jFf/+oxX//qMV//6jFf/+
oxX//qMV//6jFf/+oxX//qMV//6jFf/+oxX//qMV//6jFf/+oxX//aIT//2hFPf7oRTd/KATpfia
CkjriQAMAAAAAAAAAAAAAAAAAAAAAJlmAATWvhQ+1cIew9jEIP3ZxSL/2MQg/eG2G/P3phT5/aMU
//6jFf/+oxX//qMV//6jFf/+oxX//qMV//6jFf/+oxX//qMV//6jFf/+oxX//qMV//6jFf/+oxX/
/qMV//6jFf/+oxX//KAU+fqfE6PzngwqfwAAAgAAAACqfwAG1r0ZPtjDH9XZxSL/18Ig/djCH+3W
wyDZ1sMg0eW0GcX6oxTl/aIT//6jFf/9ohP//aET8fugFdP7oBTP+6AUz/ugFM/7oBTP+6AUz/ug
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////
//////////////////gAAB/gAAAHwAAAA4fD/8EP4f/xH/D/8R/4f/gf/D/4H/4f+A/zD/EP4Yfx
g4PBw8AH4APgD/AH+D/8H/x////+P/z//h/4f/8P8P//B8H//4AD///gB///8B//////////////
//////////////8=')
	#endregion
	$formWin路由绑定ByTencentClou.MaximizeBox = $False
	$formWin路由绑定ByTencentClou.MinimizeBox = $False
	$formWin路由绑定ByTencentClou.Name = "formWin路由绑定ByTencentClou"
	$formWin路由绑定ByTencentClou.Text = "Win路由绑定 By TencentCloud"
	$formWin路由绑定ByTencentClou.add_Load($formWin路由绑定ByTencentClou_Load)
	#
	# text1
	#
	$text1.BorderStyle = 'FixedSingle'
	$text1.Location = '88, 173'
	$text1.Multiline = $True
	$text1.Name = "text1"
	$text1.ReadOnly = $True
	$text1.ScrollBars = 'Both'
	$text1.Size = '534, 88'
	$text1.TabIndex = 8
	#
	# button一键回滚
	#
	$button一键回滚.Enabled = $False
	$button一键回滚.Location = '498, 267'
	$button一键回滚.Name = "button一键回滚"
	$button一键回滚.Size = '124, 23'
	$button一键回滚.TabIndex = 7
	$button一键回滚.Text = "一键回滚"
	$button一键回滚.UseVisualStyleBackColor = $True
	$button一键回滚.add_Click($button一键回滚_Click)
	#
	# button一键执行
	#
	$button一键执行.Location = '12, 267'
	$button一键执行.Name = "button一键执行"
	$button一键执行.Size = '479, 23'
	$button一键执行.TabIndex = 6
	$button一键执行.Text = "一键执行"
	$button一键执行.UseVisualStyleBackColor = $True
	$button一键执行.add_Click($button一键执行_Click)
	#
	# process
	#
	$process.ImageAlign = 'TopLeft'
	$process.Location = '2, 170'
	$process.Name = "process"
	$process.Size = '80, 23'
	$process.TabIndex = 5
	$process.Text = "进度"
	$process.TextAlign = 'MiddleCenter'
	#
	# interfacename
	#
	$interfacename.Location = '2, 57'
	$interfacename.Name = "interfacename"
	$interfacename.Size = '80, 31'
	$interfacename.TabIndex = 3
	$interfacename.Text = "网卡名称"
	$interfacename.TextAlign = 'MiddleCenter'
	#
	# iflist
	#
	$iflist.FormattingEnabled = $True
	$iflist.Location = '88, 57'
	$iflist.Name = "iflist"
	$iflist.ScrollAlwaysVisible = $True
	$iflist.Size = '534, 108'
	$iflist.TabIndex = 2
	#
	# textbox1
	#
	$textbox1.Location = '88, 14'
	$textbox1.Name = "textbox1"
	$textbox1.Size = '534, 20'
	$textbox1.TabIndex = 1
	#
	# domainname
	#
	$domainname.Location = '2, 7'
	$domainname.Name = "domainname"
	$domainname.Size = '87, 36'
	$domainname.TabIndex = 0
	$domainname.Text = "请输入域名 或 IP地址"
	$domainname.TextAlign = 'MiddleCenter'
	$formWin路由绑定ByTencentClou.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formWin路由绑定ByTencentClou.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formWin路由绑定ByTencentClou.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formWin路由绑定ByTencentClou.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formWin路由绑定ByTencentClou.ShowDialog()

} #End Function

#Call the form
Call-RouteAddSource_psf | Out-Null
